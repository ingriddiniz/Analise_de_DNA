# -*- coding: utf-8 -*-
"""Analise_DNA

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/108ghLq3V9R7nChvkWWZki980MxdQfkWl
"""

# the nucleotide complement of a DNA nucleotide in its bonded DNA strand
nucleotidePairs = {'A':'T','G':'C','Y':'R','W':'W','S':'S','K':'M','D':'H','V':'B','X':'X','N':'N'}
for k,v in list(nucleotidePairs.items()): nucleotidePairs[v] = k

def nucleotidePair(c):
    return nucleotidePairs[c]

def leDNA():
    sequence = ''
    complemento = ''
    with open('/content/drive/MyDrive/Prog2/dados_P1/U49845.1.fasta', 'r') as file:
        for line in file:
            line = line.strip()
            if not line.startswith('>'):  # Ignorar linhas de cabe√ßalho
                if line != '':
                  sequence += line
    for base in sequence:
      complemento += nucleotidePair(base)
    return sequence, complemento

def leEnzima():
    enzimas = {}
    with open('/content/drive/MyDrive/Prog2/dados_P1/link_staden.txt', 'r') as file:
        lines = file.readlines()
        lines = lines[:-1]
        found_start = False
        for line in lines:
            if not found_start and line.startswith('A'):
                found_start = True
            if found_start:
                nome = line.split('/')[0]
                cut53 = line.split('/')[1]
                cut35 = line.split('/')[2]
                if "'" not in cut53:
                  cut53+="'"
                if cut35 == '':
                  index=0
                  for base in cut53:
                    if base != "'":
                      cut35 += nucleotidePair(base)
                    else:
                      index=cut53.index("'")
                  loc_cut_35=(len(cut53)-1)-index
                  cut35=cut35[:loc_cut_35]+"'"+cut35[loc_cut_35:]
                if "'" not in cut35:
                  cut35="'" + cut35
                enzimas[nome] = tuple([cut53, (cut53.index("'")+1), cut35, (cut35.index("'")+1)])
    return enzimas